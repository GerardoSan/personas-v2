name: CI/CD

on:
  push:
    branches: [ "main" ]
  pull_request:

env:
  AWS_REGION: us-east-2
  TERRAFORM_DIR: infra/terraform

jobs:
  checks:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      # Python tests (simulados)
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'
      - name: Run pytest (simulado)
        run: |
          echo "Running Python tests..."
          # Aquí después agregas pytest real

  build_and_deploy:
    needs: checks
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
    steps:
      - uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Build Lambda artifact
        working-directory: lambda
        run: |
          chmod +x build.sh
          ./build.sh
          aws s3 cp personas_lambda.zip s3://${{ secrets.ARTIFACTS_BUCKET }}/${{ secrets.LAMBDA_S3_KEY }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Terraform Init
        run: terraform -chdir=${{ env.TERRAFORM_DIR }} init

      - name: Terraform Plan
        run: terraform -chdir=${{ env.TERRAFORM_DIR }} plan \
          -var="artifacts_bucket=${{ secrets.ARTIFACTS_BUCKET }}" \
          -var="lambda_s3_key=${{ secrets.LAMBDA_S3_KEY }}" \
          -out=tfplan

      - name: Terraform Apply
        if: github.ref == 'refs/heads/main'
        run: terraform -chdir=${{ env.TERRAFORM_DIR }} apply -auto-approve tfplan
